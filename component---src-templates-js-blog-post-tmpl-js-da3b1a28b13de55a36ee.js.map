{"version":3,"sources":["webpack://Bhumit-Attarde-blog/./src/components/js/Bio.js","webpack://Bhumit-Attarde-blog/./src/components/css/Bio.module.css","webpack://Bhumit-Attarde-blog/./src/templates/js/BlogPostTmpl.js","webpack://Bhumit-Attarde-blog/./src/templates/css/BlogPostTmpl.module.css"],"names":["data","useStaticQuery","author","site","siteMetadata","className","name","href","social","website","linkedin","icon","faLinkedinIn","github","faGithub","email","faAt","twitter","faTwitter","location","post","markdownRemark","siteTitle","title","previous","next","Layout","frontmatter","description","excerpt","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","Bio","AniLink","cover","to","fields","slug","direction","bg","transitionCoverColor","rel"],"mappings":"qNA+EA,EAnEY,WAAO,IAAD,YACVA,GAAOC,oBAAe,cAmBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OAGvC,OACE,uBAAKG,UCnCQ,2BDoCVH,aAAA,EAAAA,EAAQI,OACP,yBACE,sCACa,IACX,8BACE,qBAAGC,KAAI,UAAEP,EAAKG,KAAKC,oBAAZ,aAAE,EAAwBI,OAAOC,SAAUP,EAAOI,QAG7D,sBAAID,UC3CW,kCD4Cb,0BACE,qBACEE,KAAI,uCAA8BP,EAAKG,KAAKC,oBAAxC,aAA8B,EAAwBI,OAAOE,WAEjE,gBAAC,IAAD,CAAiBC,KAAMC,UAG3B,0BACE,qBACEL,KAAI,qCAA4BP,EAAKG,KAAKC,oBAAtC,aAA4B,EAAwBI,OAAOK,SAE/D,gBAAC,IAAD,CAAiBF,KAAMG,UAG3B,0BACE,qBAAGP,KAAI,qBAAYP,EAAKG,KAAKC,oBAAtB,aAAY,EAAwBI,OAAOO,QAChD,gBAAC,IAAD,CAAiBJ,KAAMK,UAG3B,0BACE,qBACET,KAAI,sCAA6BP,EAAKG,KAAKC,oBAAvC,aAA6B,EAAwBI,OAAOS,UAEhE,gBAAC,IAAD,CAAiBN,KAAMO,e,8IEKvC,EA/DqB,SAAC,GAAwB,IAAtBlB,EAAqB,EAArBA,KAAMmB,EAAe,EAAfA,SACtBC,EAAOpB,EAAKqB,eACZC,EAAYtB,EAAKG,KAAKC,aAAamB,MACjCC,EAAmBxB,EAAnBwB,SAAUC,EAASzB,EAATyB,KAElB,OACE,gBAACC,EAAA,EAAD,CAAQP,SAAUA,EAAUI,MAAOD,GACjC,gBAAC,IAAD,CACEC,MAAOH,EAAKO,YAAYJ,MACxBK,YAAaR,EAAKO,YAAYC,aAAeR,EAAKS,UAGpD,2BAASC,WAAS,EAACC,SAAS,6BAC1B,0BAAQ1B,UCvBW,6CDwBjB,sBAAI2B,SAAS,YAAYZ,EAAKO,YAAYJ,OAC1C,yBAAOlB,UCxBK,wCDyBTe,EAAKO,YAAYM,OAItB,wBACE5B,UC5Ba,wCD6Bb6B,wBAAyB,CAAEC,OAAQf,EAAKgB,MACxCJ,SAAS,gBAGX,gBAACK,EAAA,EAAD,OAGF,uBAAKhC,UCrCU,uCDsCb,0BACE,0BACGmB,GACC,gBAACc,EAAA,EAAD,CACEC,OAAK,EACLC,GAAIhB,EAASiB,OAAOC,KACpBC,UAAU,OACVC,GAAIC,IACJC,IAAI,QALN,KAOKtB,EAASG,YAAYJ,QAI9B,0BACGE,GACC,gBAACa,EAAA,EAAD,CACEC,OAAK,EACLC,GAAIf,EAAKgB,OAAOC,KAChBC,UAAU,QACVC,GAAIC,IACJC,IAAI,QAEHrB,EAAKE,YAAYJ,MAPpB","file":"component---src-templates-js-blog-post-tmpl-js-da3b1a28b13de55a36ee.js","sourcesContent":["import * as React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAt } from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  faLinkedinIn,\n  faGithub,\n  faTwitter,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nimport * as BioStyle from \"../css/Bio.module.css\";\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n          }\n          social {\n            twitter\n            website\n            linkedin\n            github\n            email\n          }\n        }\n      }\n    }\n  `);\n\n  const author = data.site.siteMetadata?.author;\n  // const social = data.site.siteMetadata?.social\n\n  return (\n    <div className={BioStyle.Bio}>\n      {author?.name && (\n        <p>\n          <i>\n            Written by{\" \"}\n            <strong>\n              <a href={data.site.siteMetadata?.social.website}>{author.name}</a>\n            </strong>\n          </i>\n          <ul className={BioStyle.contactList}>\n            <li>\n              <a\n                href={`https://www.linkedin.com/${data.site.siteMetadata?.social.linkedin}`}\n              >\n                <FontAwesomeIcon icon={faLinkedinIn} />\n              </a>\n            </li>\n            <li>\n              <a\n                href={`https://www.github.com/${data.site.siteMetadata?.social.github}`}\n              >\n                <FontAwesomeIcon icon={faGithub} />\n              </a>\n            </li>\n            <li>\n              <a href={`mailto:${data.site.siteMetadata?.social.email}`}>\n                <FontAwesomeIcon icon={faAt} />\n              </a>\n            </li>\n            <li>\n              <a\n                href={`https://www.twitter.com/${data.site.siteMetadata?.social.twitter}`}\n              >\n                <FontAwesomeIcon icon={faTwitter} />\n              </a>\n            </li>\n          </ul>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default Bio;\n","// extracted by mini-css-extract-plugin\nexport var Bio = \"Bio-module--Bio--cVltH\";\nexport var contactList = \"Bio-module--contactList--2yOcd\";","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport AniLink from \"gatsby-plugin-transition-link/AniLink\";\n\nimport { transitionCoverColor } from \"../../config.js\";\nimport Bio from \"../../components/js/Bio\";\nimport Layout from \"../../components/js/Layout\";\nimport Seo from \"../../components/js/SEO\";\n\nimport * as BlogPostTmplStyle from \"../css/BlogPostTmpl.module.css\";\n\nconst BlogPostTmpl = ({ data, location }) => {\n  const post = data.markdownRemark;\n  const siteTitle = data.site.siteMetadata.title;\n  const { previous, next } = data;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n\n      <article itemScope itemType=\"http://schema.org/Article\">\n        <header className={BlogPostTmplStyle.articleHeader}>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <small className={BlogPostTmplStyle.blogDate}>\n            {post.frontmatter.date}\n          </small>\n        </header>\n\n        <main\n          className={BlogPostTmplStyle.mdWrapper}\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n\n        <Bio />\n      </article>\n\n      <nav className={BlogPostTmplStyle.blogNav}>\n        <ul>\n          <li>\n            {previous && (\n              <AniLink\n                cover\n                to={previous.fields.slug}\n                direction=\"left\"\n                bg={transitionCoverColor}\n                rel=\"prev\"\n              >\n                ← {previous.frontmatter.title}\n              </AniLink>\n            )}\n          </li>\n          <li>\n            {next && (\n              <AniLink\n                cover\n                to={next.fields.slug}\n                direction=\"right\"\n                bg={transitionCoverColor}\n                rel=\"next\"\n              >\n                {next.frontmatter.title} →\n              </AniLink>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  );\n};\n\nexport default BlogPostTmpl;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n","// extracted by mini-css-extract-plugin\nexport var articleHeader = \"BlogPostTmpl-module--articleHeader--QL_c_\";\nexport var blogDate = \"BlogPostTmpl-module--blogDate--23nNX\";\nexport var blogNav = \"BlogPostTmpl-module--blogNav--1WblS\";\nexport var mdWrapper = \"BlogPostTmpl-module--mdWrapper--3k8Me\";"],"sourceRoot":""}
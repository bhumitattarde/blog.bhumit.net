{"version":3,"sources":["webpack://bhumit-attarde-blog/./src/components/js/Bio.js","webpack://bhumit-attarde-blog/./src/components/css/Bio.module.css","webpack://bhumit-attarde-blog/./src/pages/index.js","webpack://bhumit-attarde-blog/./src/pages/css/index.module.css"],"names":["data","useStaticQuery","author","site","siteMetadata","className","name","href","social","website","linkedin","icon","faLinkedinIn","github","faGithub","email","faAt","twitter","faTwitter","location","siteTitle","title","posts","allMarkdownRemark","nodes","length","Layout","map","post","frontmatter","fields","slug","key","itemScope","itemType","AniLink","cover","to","direction","bg","transitionCoverColor","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt"],"mappings":"qNA+EA,EAnEY,WAAO,IAAD,YACVA,GAAOC,oBAAe,cAmBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OAGvC,OACE,uBAAKG,UCnCQ,2BDoCVH,aAAA,EAAAA,EAAQI,OACP,yBACE,sCACa,IACX,8BACE,qBAAGC,KAAI,UAAEP,EAAKG,KAAKC,oBAAZ,aAAE,EAAwBI,OAAOC,SAAUP,EAAOI,QAG7D,sBAAID,UC3CW,kCD4Cb,0BACE,qBACEE,KAAI,uCAA8BP,EAAKG,KAAKC,oBAAxC,aAA8B,EAAwBI,OAAOE,WAEjE,gBAAC,IAAD,CAAiBC,KAAMC,UAG3B,0BACE,qBACEL,KAAI,qCAA4BP,EAAKG,KAAKC,oBAAtC,aAA4B,EAAwBI,OAAOK,SAE/D,gBAAC,IAAD,CAAiBF,KAAMG,UAG3B,0BACE,qBAAGP,KAAI,qBAAYP,EAAKG,KAAKC,oBAAtB,aAAY,EAAwBI,OAAOO,QAChD,gBAAC,IAAD,CAAiBJ,KAAMK,UAG3B,0BACE,qBACET,KAAI,sCAA6BP,EAAKG,KAAKC,oBAAvC,aAA6B,EAAwBI,OAAOS,UAEhE,gBAAC,IAAD,CAAiBN,KAAMO,e,8IEIvC,EA9DkB,SAAC,GAAwB,IAAtBlB,EAAqB,EAArBA,KAAMmB,EAAe,EAAfA,SACnBC,EAAYpB,EAAKG,KAAKC,aAAaiB,MACnCC,EAAQtB,EAAKuB,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,gBAACC,EAAA,EAAD,CAAQP,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,cACX,qBAAGhB,UCbc,oCDajB,gDAQJ,gBAACqB,EAAA,EAAD,CAAQP,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,cACX,sBAAIhB,UC5BY,iCD6BbiB,EAAMK,KAAI,SAACC,GACV,IAAMP,EAAQO,EAAKC,YAAYR,OAASO,EAAKE,OAAOC,KAEpD,OACE,sBAAIC,IAAKJ,EAAKE,OAAOC,KAAM1B,UChCZ,sCDiCb,2BACEA,UCjCa,uCDkCb4B,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAACC,EAAA,EAAD,CACEC,OAAK,EACLC,GAAIT,EAAKE,OAAOC,KAChBO,UAAU,OACVC,GAAIC,IACJC,SAAS,OAET,wBAAMA,SAAS,YAAYpB,KAG/B,yBAAOhB,UChDH,iCDiDDuB,EAAKC,YAAYa,OAGtB,2BAASrC,UCnDA,oCDoDP,qBACEsC,wBAAyB,CACvBC,OAAQhB,EAAKC,YAAYgB,aAAejB,EAAKkB,SAE/CL,SAAS","file":"component---src-pages-index-js-d8312eb9dbf355d37a35.js","sourcesContent":["import * as React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAt } from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  faLinkedinIn,\n  faGithub,\n  faTwitter,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nimport * as BioStyle from \"../css/Bio.module.css\";\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n          }\n          social {\n            twitter\n            website\n            linkedin\n            github\n            email\n          }\n        }\n      }\n    }\n  `);\n\n  const author = data.site.siteMetadata?.author;\n  // const social = data.site.siteMetadata?.social\n\n  return (\n    <div className={BioStyle.Bio}>\n      {author?.name && (\n        <p>\n          <i>\n            Written by{\" \"}\n            <strong>\n              <a href={data.site.siteMetadata?.social.website}>{author.name}</a>\n            </strong>\n          </i>\n          <ul className={BioStyle.contactList}>\n            <li>\n              <a\n                href={`https://www.linkedin.com/${data.site.siteMetadata?.social.linkedin}`}\n              >\n                <FontAwesomeIcon icon={faLinkedinIn} />\n              </a>\n            </li>\n            <li>\n              <a\n                href={`https://www.github.com/${data.site.siteMetadata?.social.github}`}\n              >\n                <FontAwesomeIcon icon={faGithub} />\n              </a>\n            </li>\n            <li>\n              <a href={`mailto:${data.site.siteMetadata?.social.email}`}>\n                <FontAwesomeIcon icon={faAt} />\n              </a>\n            </li>\n            <li>\n              <a\n                href={`https://www.twitter.com/${data.site.siteMetadata?.social.twitter}`}\n              >\n                <FontAwesomeIcon icon={faTwitter} />\n              </a>\n            </li>\n          </ul>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default Bio;\n","// extracted by mini-css-extract-plugin\nexport var Bio = \"Bio-module--Bio--cVltH\";\nexport var contactList = \"Bio-module--contactList--2yOcd\";","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport AniLink from \"gatsby-plugin-transition-link/AniLink\";\n\nimport { transitionCoverColor } from \"../config.js\";\nimport Bio from \"../components/js/Bio\";\nimport Layout from \"../components/js/Layout\";\nimport Seo from \"../components/js/SEO\";\n\nimport * as BlogIndexStyle from \"./css/index.module.css\";\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title;\n  const posts = data.allMarkdownRemark.nodes;\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"All posts\" />\n        <p className={BlogIndexStyle.noPostsText}>\n          Nothing to see here yet.. Check back later!\n        </p>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"All posts\" />\n      <ol className={BlogIndexStyle.blogList}>\n        {posts.map((post) => {\n          const title = post.frontmatter.title || post.fields.slug;\n\n          return (\n            <li key={post.fields.slug} className={BlogIndexStyle.blogListEntry}>\n              <article\n                className={BlogIndexStyle.blogDescription}\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <AniLink\n                      cover\n                      to={post.fields.slug}\n                      direction=\"left\"\n                      bg={transitionCoverColor}\n                      itemProp=\"url\"\n                    >\n                      <span itemProp=\"headline\">{title}</span>\n                    </AniLink>\n                  </h2>\n                  <small className={BlogIndexStyle.blogDate}>\n                    {post.frontmatter.date}\n                  </small>\n                </header>\n                <section className={BlogIndexStyle.blogExcerpt}>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          );\n        })}\n      </ol>\n    </Layout>\n  );\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`;\n","// extracted by mini-css-extract-plugin\nexport var blogList = \"index-module--blogList--2pyoy\";\nexport var blogListEntry = \"index-module--blogListEntry--knWqf\";\nexport var blogDescription = \"index-module--blogDescription--TNdRP\";\nexport var blogDate = \"index-module--blogDate--1oOKM\";\nexport var blogExcerpt = \"index-module--blogExcerpt--29Zd9\";\nexport var noPostsText = \"index-module--noPostsText--2mlQM\";"],"sourceRoot":""}
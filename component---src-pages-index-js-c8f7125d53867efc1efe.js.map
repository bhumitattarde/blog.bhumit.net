{"version":3,"sources":["webpack://gatsby-starter-blog/./src/components/js/Bio.js","webpack://gatsby-starter-blog/./src/pages/index.js","webpack://gatsby-starter-blog/./src/pages/css/index.module.css"],"names":["data","useStaticQuery","author","site","siteMetadata","social","className","name","summary","location","siteTitle","title","posts","allMarkdownRemark","nodes","length","Layout","map","post","frontmatter","fields","slug","key","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt"],"mappings":"oMAkCA,EA/BY,WAAO,IAAD,IACVA,GAAOC,oBAAe,cAgBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OAC3B,UAAGF,EAAKG,KAAKC,oBAAb,OAAG,EAAwBC,OAEvC,OACE,uBAAKC,UAAU,QACZJ,aAAA,EAAAA,EAAQK,OACP,uCACa,8BAASL,EAAOK,MAD7B,KAC6CL,aAAA,EAAAA,EAAQM,UAAW,Q,oBCqCxE,EAvDkB,SAAC,GAAwB,IAAtBR,EAAqB,EAArBA,KAAMS,EAAe,EAAfA,SACnBC,EAAYV,EAAKG,KAAKC,aAAaO,MACnCC,EAAQZ,EAAKa,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,gBAACC,EAAA,EAAD,CAAQP,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,cACX,gBAAC,EAAD,MACA,yEAMJ,gBAACK,EAAA,EAAD,CAAQP,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,cACX,sBAAIL,UCzBY,iCD0BbM,EAAMK,KAAI,SAACC,GACV,IAAMP,EAAQO,EAAKC,YAAYR,OAASO,EAAKE,OAAOC,KAEpD,OACE,sBAAIC,IAAKJ,EAAKE,OAAOC,KAAMf,UC7BZ,sCD8Bb,2BACEA,UC9Ba,uCD+BbiB,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAD,CAAMC,GAAIR,EAAKE,OAAOC,KAAMM,SAAS,OACnC,wBAAMA,SAAS,YAAYhB,KAG/B,yBAAOL,UCvCH,iCDwCDY,EAAKC,YAAYS,OAGtB,2BAAStB,UC1CA,oCD2CP,qBACEuB,wBAAyB,CACvBC,OAAQZ,EAAKC,YAAYY,aAAeb,EAAKc,SAE/CL,SAAS","file":"component---src-pages-index-js-c8f7125d53867efc1efe.js","sourcesContent":["import * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      {author?.name && (\n        <p>\n          Written by <strong>{author.name}</strong> {author?.summary || null}\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport Bio from \"../components/js/Bio\";\nimport Layout from \"../components/js/Layout\";\nimport Seo from \"../components/js/SEO\";\n\nimport * as BlogIndexStyle from \"./css/index.module.css\";\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title;\n  const posts = data.allMarkdownRemark.nodes;\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"All posts\" />\n        <Bio />\n        <p>Nothing to see here yet.. Check back later!</p>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"All posts\" />\n      <ol className={BlogIndexStyle.blogList}>\n        {posts.map((post) => {\n          const title = post.frontmatter.title || post.fields.slug;\n\n          return (\n            <li key={post.fields.slug} className={BlogIndexStyle.blogListEntry}>\n              <article\n                className={BlogIndexStyle.blogDescription}\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small className={BlogIndexStyle.blogDate}>\n                    {post.frontmatter.date}\n                  </small>\n                </header>\n                <section className={BlogIndexStyle.blogExcerpt}>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          );\n        })}\n      </ol>\n    </Layout>\n  );\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`;\n","// extracted by mini-css-extract-plugin\nexport var blogList = \"index-module--blogList--2pyoy\";\nexport var blogListEntry = \"index-module--blogListEntry--knWqf\";\nexport var blogDescription = \"index-module--blogDescription--TNdRP\";\nexport var blogDate = \"index-module--blogDate--1oOKM\";\nexport var blogExcerpt = \"index-module--blogExcerpt--29Zd9\";"],"sourceRoot":""}